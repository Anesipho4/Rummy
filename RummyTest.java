import java.util.Random;

public class RummyTest
{
    public static void main(String[] args)
    {
//          Some code to:
//          Create variable for deck of cards,
//          Create variable for the various suits of the cards
//          Create variable for the various face cards

        String[] suits = {"♠", "♦", "♥", "♣"};
        String[] cards = {"A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K"};
        String[] stringCards = new String[52];

//______________________________________________________________________________________________________________________
//        <<<---------------------Method Call Area--------------------->>>
        System.out.println("\nDeck of cards:");
        printArray(createDeck(suits, cards, stringCards));

        System.out.println("\n\nShuffled Deck: ");
        printArray(shuffleCards(stringCards));



//______________________________________________________________________________________________________________________
    }
    public static String [] createDeck(String[] suits, String[] cards, String[] stringCards)
    {
        int carryOver = 0;
        String returnCards;

//          this "int carryOver" helps iterate through the stringCards past
//          the index of 13. The for loops could only create the first suit
//          with the cards A to King. After that, without the carryOver var,
//          the loops couldn't access the higher indices of stringCards, and
//          just assign "null" to the rest of the indices past 13.
//          In other words, this carryOver is very special and took me an hour
//          to figure out :)

        for (String suit : suits)
        {
            for (int j = 0; j < cards.length; j++)
            {
                stringCards[j + carryOver] = suit + cards[j];
            }
            carryOver += 13;
        }

        return stringCards;
    }

    public static String [] shuffleCards(String [] array)
    {
        //      Shuffles the cards and assigns them to the "shuffled" array:

        String check;
        int randomVariable;
/*          "check" checks whether the index (or card) has already been
            placed into the shuffled array "shuffleIndices", or used. If it
            has been used, that card is skipped.
            "randomVariable" will be used to create a random number referring
            to a random index of the cardsIndices, which will then place
            that random index of cardsIndices into the first position of a
            new array.
*/
        String[] shuffleIndices = new String[52];
/*          Create an array variable that the shuffled indices of the
            cardsIndices will be assigned to
*/

        Random random = new Random();
//              Creates a new random object.

        for (int i = 0; i < array.length; i++)
//        iterates through each card of the deck

        {
            randomVariable = random.nextInt(0, 52);
//            Creates a random integer between 0 and 51

            check = array[randomVariable];
//            The integer generated by "randomVariable" is used as a random
//            index for "stringCards", and this stringCards index is assigned
//            to the "check" variable.


            while (check == "0")
//            if the "check" variable is equal to "0", this means that card
//            index has been chosen, taken and put into the shuffled array.
//            The process of generating a random variable will repeat until
//            an "index" that will not return "0" is chosen, meaning this card
//            has not been put into the shuffled array yet.

            {
                randomVariable = random.nextInt(0, 52);
                check = array[randomVariable];
            }

            shuffleIndices[i] = check;
            array[randomVariable] = "0";

        }
        return shuffleIndices;
    }

    public static void printArray(String[] array)
    {

        for (int i = 0; i < array.length; i++)
        {
            System.out.print(array[i] + " ");
        }
    }

    public static void player(){

    }
}